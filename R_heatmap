---
title: "Heatmap clustering code"
author: "Jacoby Baker"
date: "10/11/2018"
output: html_document
---

Load Libraries
```{r}
library(tidyverse) # after install.packages('tidyverse')
library(reshape2)  # afteinstall.packages('reshape2')
library(ggplot2)   # after install.packages('ggplot2')
library(ggdendro)   # after install.packages('ggdendro')
```

```{r}
#change the working directory to where the file is that you are going to use
setwd("/Users/jacobybaker/Documents/Logan_Lab/Copper_Hypoxia_EXP/edgeR.40768.dir")
getwd()

```

load in the data and scale the data variables 
```{r}
#load in the data
data <- read.csv("/Users/jacobybaker/Documents/Logan_Lab/Copper_Hypoxia_EXP/edgeR.40768.dir/copper_hypox_gill_all_comparison_dge_annotated.csv", header=TRUE)

data <- data[,c(2,4:length(data))] # This is to extract only the swissprotID column and expression data. This could change depending on the format of the file
df_data <- melt(data)

#this heatmap shows the genes and samples in no particular order
heatmap.plot<-ggplot(df_data, aes(x=variable,y=swissprotID)) +
  geom_tile(aes(fill = value)) +
  scale_fill_gradient2(low="green", mid="black", high="red", midpoint=0,    limits=c(-2,2)) + # change color scale min/max
  ylab("Genes") +
  xlab("Treatment") +
  ggtitle("Differential gene expression in gill tissue") +
  theme(legend.title = element_text(size = 10),
        legend.text = element_text(size = 12),
        plot.title = element_text(size=10),
        axis.title = element_text(size=14,face="bold"),
        axis.text.x = element_text(angle = 90, hjust = 1))+
  labs(fill = "Log2 Fold Change")

print(heatmap.plot)
```

check for row duplicates
```{r}
#check to see if there are any duplicated row names, if there are, the next clustering command won't work.
data[duplicated(data) | duplicated(data, fromLast=TRUE), ]
duplicated(data)

```


Reorganize the data to order the columns and rows into something more usable.

If we want to cluster the data we can use hclust() the standard hierarchical clustering algorithm in R, and re-order the matrix manually before passing to melt()
```{r}
dat <- data[,2:length(data)]  # include only the numerical columns
rownames(dat) <- data[,1]
row.order <- hclust(dist(dat))$order # clustering
col.order <- hclust(dist(t(dat)))$order #clusters columns
col.order <-c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23) #clusters based on sample order
dat_new <- dat[row.order, col.order] # re-order matrix accoring to clustering

clustered_dat <- melt(as.matrix(dat_new)) # reshape into dataframe
names(clustered_dat)[c(1:2)] <- c("swissprotID", "treatment")
clustered_dat
g<-ggplot(clustered_dat, aes(x=treatment,y=swissprotID)) +
  geom_tile(aes(fill = value)) +
  scale_fill_gradient2(low="purple", mid="black", high="yellow", midpoint=0,    limits=c(-4,4)) + # change color scale min/max
  ylab("Genes") +
  xlab("Treatment") +
  ggtitle("Copper hypoxia gills") +
  theme(legend.title = element_text(size = 10),
        legend.text = element_text(size = 12),
        plot.title = element_text(size=10),
        axis.title = element_text(size=14,face="bold"),
        axis.text.x = element_text(angle = 90, hjust = 1),
        axis.text.y = element_text(angle = 20, size = 5))+
  labs(fill = "Log2 Fold Change")

g
```

```{r}
ggsave("copper_hypoxia_gills_all_comparison_ordered_by_treatment.png",plot=g)
```

